This repo contains internal parametricity experiments, coded in ~agda --bridges~. The ~--bridges~ branch can be found here https://github.com/antoinevanmuylder/agda/tree/bridges. It implements the parametricity primitives of Cavallo-Harper (CH) from https://arxiv.org/pdf/2005.11290.pdf. See ~INSTALL.org~ for instructions.
*** Quick tour of some files
Check out ~Everything.agda~.
- ~Bridgy.Core/~ :  ~Agda --bridges~ primitive declarations, raw relational extensionality principles, useful lemmas/definitions. 
  - ~BridgePrims.agda~: declares the CH primitives.
  - ~BridgeExamples.agda~: basic bridge behaviour + commutation principles for ~Bridge~ vs ~Bridge, Path, Σ, ×~.
  - ~ExtentExamples.agda~: commutation ~Bridge~ vs ~Π~.
  - ~GelExamples.agda~: commutation with equivalences, and the universe ("relativity").
- ~Bridgy.ROTT/~ contains our relational observational type theory (ROTT), a DSL to build SRP proofs and use internal parametricity in a modular way.
  - ~Judgments.agda~ defines types of: semantic contexts (native reflexive graphs or NRG), semantic substitutions (native relators), semantic types (displayed native reflexive graphs i.e. dNRGs) and semantic terms.
  - ~Param.agda~ is our internal observational parametricity theorem, defined for dNRGs.
  - ~Rules.agda~ contains semantic rules to build composite dNRGs.
- ~Bridgy.Examples/~: examples of free theorems, proved using ROTT.
- ~Bridgy.Experimental/~: things that are poorly coded or do not work yet.
*** Comparison with other internally parametric systems
A previous experimental implementation by Cavallo ("ptt") exists [[https://github.com/ecavallo/ptt][here]].
| criterion            | this impl        | ptt impl           |
|----------------------+------------------+--------------------|
| implements           | CH thy           | ≈BCM               |
| on top of            | cubical          | intensional MLTT   |
| arity                | binary           | nary               |
| Gel polarity         | ⊖ (proj, η rule) | ⊕                  |
| can form. relativity | yes              | no?                |
| modelled in          | std. presheaves  | refined presheaves |
